name: Python CI

on: [push, pull_request] # Triggers the workflow on push or pull request events

jobs:
  build:
    runs-on: ubuntu-latest # Specifies the runner environment

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"] # Test against multiple Python versions

    steps:
    - uses: actions/checkout@v4 # Checks-out your repository under $GITHUB_WORKSPACE

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # You can add more specific dependencies here for testing later, e.g., pytest
        # pip install pytest

    - name: Test with a simple Python version check (or linter/formatter)
      run: |
        python --version
        # Example: If you add pylint to requirements.txt
        # pylint **/*.py
        # Example: If you add black to requirements.txt
        # black --check .

# Optional: Add a job specifically for the instruction if you want to be precise
#  check_requirements_install:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python
#      uses: actions/setup-python@v3
#      with:
#        python-version: '3.x' # Use a generic Python version
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "requirements.txt not found"; fi